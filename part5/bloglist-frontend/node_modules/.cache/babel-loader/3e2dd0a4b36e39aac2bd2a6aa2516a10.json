{"ast":null,"code":"var _jsxFileName = \"/Users/befantastic/my_repos/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport BlogForm from './components/BlogForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const [newUrl, setNewUrl] = useState(\"\");\n  const [loginVisible, setLoginVisible] = useState(false);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      setUser(user);\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setMessage('Wrong username or password');\n      setTimeout(() => {\n        setMessage(null);\n      }, 1000);\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.removeItem('loggedBlogappUser');\n  };\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"log in to application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: loginVisible ? 'none' : ''\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLoginVisible(true),\n        children: \"Click to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message,\n      style: {\n        color: 'red',\n        borderStyle: 'solid',\n        borderColor: 'red',\n        background: 'lightgray',\n        fontSize: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: loginVisible ? '' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n        onSubmit: handleLogin,\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLoginVisible(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const addBlog = event => {\n    event.preventDefault();\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: Math.floor(Math.random() * 200 + 1)\n    };\n    blogService.createNew(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog));\n      setMessage(`a new blog ${newTitle} by ${newAuthor}`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 3000);\n      setNewTitle('');\n      setNewAuthor('');\n      setNewUrl('');\n    });\n  }; // const blogForm = () => {\n  //   <form onSubmit={createBlog}>\n  //     <>title <input value={title} onChange={({ target }) => setTitle(target.value)} /> </>\n  //     <>author <input value={author} onChange={({ target }) => setAuthor(target.value)} /> </>\n  //     <>url <input value={url} onChange={({ target }) => setUrl(target.value)} /> </>\n  //   </form>\n  // }\n\n\n  const BlogsList = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message,\n      style: {\n        color: 'green',\n        borderStyle: 'solid',\n        borderColor: 'green',\n        background: 'lightgray',\n        fontSize: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", user.name, \" logged in\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"log out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BlogForm, {\n        handleSubmit: addBlog,\n        title: newTitle,\n        author: newAuthor,\n        url: newUrl,\n        handleTitleChange: _ref3 => {\n          let {\n            target\n          } = _ref3;\n          return setNewTitle(target.value);\n        },\n        handleAuthorChange: _ref4 => {\n          let {\n            target\n          } = _ref4;\n          return setNewAuthor(target.value);\n        },\n        handleUrlChange: _ref5 => {\n          let {\n            target\n          } = _ref5;\n          return setNewUrl(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user === null && loginForm(), user !== null && BlogsList(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wvcJUL50l03gG9JXz4dBRSPwbLI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/befantastic/my_repos/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","Notification","LoginForm","BlogForm","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","message","setMessage","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","loginVisible","setLoginVisible","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","login","setToken","token","setItem","stringify","exception","setTimeout","handleLogout","removeItem","loginForm","display","color","borderStyle","borderColor","background","fontSize","target","value","addBlog","blogObject","title","author","url","likes","Math","floor","random","createNew","returnedBlog","concat","BlogsList","name","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  const [newTitle, setNewTitle] = useState(\"\")\n  const [newAuthor, setNewAuthor] = useState(\"\")\n  const [newUrl, setNewUrl] = useState(\"\")\n  const [loginVisible, setLoginVisible] = useState(false)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      setUser(user)\n      blogService.setToken(user.token)\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n      setUsername('')\n      setPassword('')\n    }\n    catch (exception) {\n      setMessage('Wrong username or password')\n      setTimeout(() => {\n        setMessage(null)\n      }, 1000)\n    }\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n\n\n\n  const loginForm = () => (\n    <>\n      <h2>log in to application</h2>\n      <div style={{ display: loginVisible ? 'none' : '' }}>\n        <button onClick={() => setLoginVisible(true)}>Click to login</button>\n\n      </div>\n      <Notification message={message} style={{ color: 'red', borderStyle: 'solid', borderColor: 'red', background: 'lightgray', fontSize: 20 }} />\n      <div style={{ display: loginVisible ? '' : 'none' }}>\n        <LoginForm onSubmit={handleLogin} username={username} password={password} handleUsernameChange={({ target }) => setUsername(target.value)} handlePasswordChange={({ target }) => setPassword(target.value)} />\n        <button onClick={() => setLoginVisible(false)}>Cancel</button>\n      </div>\n    </>\n  )\n\n\n  const addBlog = (event) => {\n\n    event.preventDefault()\n\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n      likes: Math.floor(Math.random() * 200 + 1)\n    }\n\n    blogService\n      .createNew(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setMessage(`a new blog ${newTitle} by ${newAuthor}`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 3000)\n        setNewTitle('')\n        setNewAuthor('')\n        setNewUrl('')\n      })\n  }\n\n\n  // const blogForm = () => {\n  //   <form onSubmit={createBlog}>\n  //     <>title <input value={title} onChange={({ target }) => setTitle(target.value)} /> </>\n  //     <>author <input value={author} onChange={({ target }) => setAuthor(target.value)} /> </>\n  //     <>url <input value={url} onChange={({ target }) => setUrl(target.value)} /> </>\n  //   </form>\n  // }\n\n\n  const BlogsList = () => (\n    <>\n      <h2>blogs</h2>\n      <Notification message={message} style={{ color: 'green', borderStyle: 'solid', borderColor: 'green', background: 'lightgray', fontSize: 20 }} />\n      <h3> {user.name} logged in</h3>\n      <button onClick={handleLogout}>log out</button>\n\n      <h3>create new</h3>\n      <div>\n        <BlogForm handleSubmit={addBlog} title={newTitle} author={newAuthor} url={newUrl} handleTitleChange={({ target }) => setNewTitle(target.value)} handleAuthorChange={({ target }) => setNewAuthor(target.value)} handleUrlChange={({ target }) => setNewUrl(target.value)} />\n        {/* <form onSubmit={addBlog}>\n          <>Title: <input value={newTitle} onChange={({ target }) => setNewTitle(target.value)} /> </>\n          <br />\n          <>Author: <input value={newAuthor} onChange={({ target }) => setNewAuthor(target.value)} /> </>\n          <br />\n          <>Url: <input value={newUrl} onChange={({ target }) => setNewUrl(target.value)} /> </>\n          <br />\n          <button type='submit'> Create </button>\n        </form> */}\n        <button>Cancel</button>\n      </div>\n\n\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n\n\n    </>\n\n  )\n\n\n\n\n  return (\n    <div>\n\n      {user === null && loginForm()}\n      {user !== null && BlogsList()}\n\n\n\n\n      <br />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}
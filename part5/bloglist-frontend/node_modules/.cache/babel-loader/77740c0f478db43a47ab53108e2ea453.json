{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst createNew = async (newObject, token) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config);\n  return response.data;\n};\n\nconst remove = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  createNew,\n  setToken,\n  update,\n  remove\n};","map":{"version":3,"sources":["/Users/befantastic/my_repos/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","createNew","newObject","config","headers","Authorization","post","update","id","put","remove","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,SAAS,GAAG,OAAOC,SAAP,EAAkBV,KAAlB,KAA4B;AAC5C,QAAMW,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AASA,MAAMO,MAAM,GAAG,OAAOC,EAAP,EAAWN,SAAX,KAAyB;AACtC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,IAAGiB,EAAG,EAA3B,EAA8BN,SAA9B,EAAyCC,MAAzC,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AAQA,MAAMU,MAAM,GAAG,MAAOF,EAAP,IAAc;AAC3B,QAAML,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADI,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACqB,MAAN,CAAc,GAAEpB,OAAQ,IAAGiB,EAAG,EAA9B,EAAiCL,MAAjC,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACD,CAND;;AASA,eAAe;AAAEL,EAAAA,MAAF;AAAUM,EAAAA,SAAV;AAAqBR,EAAAA,QAArB;AAA+Bc,EAAAA,MAA/B;AAAuCG,EAAAA;AAAvC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createNew = async (newObject, token) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\n\nconst update = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { getAll, createNew, setToken, update, remove }"]},"metadata":{},"sourceType":"module"}
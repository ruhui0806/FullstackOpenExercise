{"ast":null,"code":"import blogService from '../services/blogs';\nexport const setBlogs = data => {\n  return {\n    type: 'SET_BLOGS',\n    payload: data\n  };\n};\nexport const appendBlog = data => {\n  return {\n    type: 'ADD_BLOG',\n    payload: data\n  };\n};\nexport const blogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_BLOGS':\n      return action.payload;\n    case 'ADD_BLOG':\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch(setBlogs(blogs));\n  };\n};\n\n//////\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = [];\nconst blogSlice = createSlice({\n  name: 'blogsReducer',\n  initialState,\n  reducers: {\n    setBlogs(state, action) {\n      return action.payload;\n    },\n    appendBlog(state, action) {\n      state.push(action.payload);\n    },\n    incrementByAmount(state, action) {\n      state.value += action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"names":["blogService","setBlogs","data","type","payload","appendBlog","blogReducer","state","action","concat","initializeBlogs","dispatch","blogs","getAll","createSlice","initialState","blogSlice","name","reducers","push","incrementByAmount","value","increment","decrement","counterSlice","actions","reducer"],"sources":["/Users/kulta/Code/FullstackOpenExercise/part7/Bloglist/bloglist-frontend/src/reducers/blogReducer.js"],"sourcesContent":["import blogService from '../services/blogs'\n\nexport const setBlogs = (data) => {\n    return { type: 'SET_BLOGS', payload: data }\n}\n\nexport const appendBlog = (data) => {\n    return { type: 'ADD_BLOG', payload: data }\n}\n\nexport const blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_BLOGS':\n            return action.payload\n        case 'ADD_BLOG':\n            return state.concat(action.payload)\n        default:\n            return state\n    }\n}\n\nexport const initializeBlogs = () => {\n    return async (dispatch) => {\n        const blogs = await blogService.getAll()\n        dispatch(setBlogs(blogs))\n    }\n}\n\n//////\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = []\n\nconst blogSlice = createSlice({\n    name: 'blogsReducer',\n    initialState,\n    reducers: {\n        setBlogs(state, action) {\n            return action.payload\n        },\n        appendBlog(state, action) {\n            state.push(action.payload)\n        },\n        incrementByAmount(state, action) {\n            state.value += action.payload\n        },\n    },\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\nexport default blogSlice.reducer\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAE3C,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAC9B,OAAO;IAAEC,IAAI,EAAE,WAAW;IAAEC,OAAO,EAAEF;EAAK,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIH,IAAI,IAAK;EAChC,OAAO;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAEF;EAAK,CAAC;AAC9C,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC1C,QAAQA,MAAM,CAACL,IAAI;IACf,KAAK,WAAW;MACZ,OAAOK,MAAM,CAACJ,OAAO;IACzB,KAAK,UAAU;MACX,OAAOG,KAAK,CAACE,MAAM,CAACD,MAAM,CAACJ,OAAO,CAAC;IACvC;MACI,OAAOG,KAAK;EAAA;AAExB,CAAC;AAED,OAAO,MAAMG,eAAe,GAAG,MAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,KAAK,GAAG,MAAMZ,WAAW,CAACa,MAAM,EAAE;IACxCF,QAAQ,CAACV,QAAQ,CAACW,KAAK,CAAC,CAAC;EAC7B,CAAC;AACL,CAAC;;AAED;AACA,SAASE,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,cAAc;EACpBF,YAAY;EACZG,QAAQ,EAAE;IACNjB,QAAQ,CAACM,KAAK,EAAEC,MAAM,EAAE;MACpB,OAAOA,MAAM,CAACJ,OAAO;IACzB,CAAC;IACDC,UAAU,CAACE,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACY,IAAI,CAACX,MAAM,CAACJ,OAAO,CAAC;IAC9B,CAAC;IACDgB,iBAAiB,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC7BD,KAAK,CAACc,KAAK,IAAIb,MAAM,CAACJ,OAAO;IACjC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEkB,SAAS;EAAEC,SAAS;EAAEH;AAAkB,CAAC,GAAGI,YAAY,CAACC,OAAO;AAC/E,eAAeT,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export const setBlogs = data => {\n  return {\n    type: 'SET_BLOGS',\n    payload: data\n  };\n};\nexport const appendBlog = data => {\n  return {\n    type: 'ADD_BLOG',\n    payload: data\n  };\n};\nexport const likeBlog = data => {\n  return {\n    type: 'ADD_BLOG',\n    payload: data\n  };\n};\nconst blogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_BLOGS':\n      return action.payload;\n    case 'ADD_BLOG':\n      return state.concat(action.payload);\n    case 'ADD_LIKE':\n      {\n        const toLikeBlog = action.payload;\n        return state.map(n => n.id !== toLikeBlog.id ? n : toLikeBlog);\n      }\n    default:\n      return state;\n  }\n};\nexport default blogReducer;\n\n// ////\n// import { createSlice } from '@reduxjs/toolkit'\n\n// const initialState = []\n\n// const blogSlice = createSlice({\n//     name: 'blogReducer',\n//     initialState,\n//     reducers: {\n//         setBlogs(state, action) {\n//             return action.payload\n//         },\n//         appendBlog(state, action) {\n//             state.push(action.payload)\n//         },\n//     },\n// })\n\n// export const { setBlogs, appendBlog } = blogSlice.actions\n// export default blogSlice.reducer\n\n// import blogService from '../services/blogs'\n// export const initializeBlogs = () => {\n//     return async (dispatch) => {\n//         const blogs = await blogService.getAll()\n//         dispatch(setBlogs(blogs))\n//     }\n// }","map":{"version":3,"names":["setBlogs","data","type","payload","appendBlog","likeBlog","blogReducer","state","action","concat","toLikeBlog","map","n","id"],"sources":["/Users/kulta/Code/FullstackOpenExercise/part7/Bloglist/bloglist-frontend/src/reducers/blogReducer.js"],"sourcesContent":["export const setBlogs = (data) => {\n    return { type: 'SET_BLOGS', payload: data }\n}\n\nexport const appendBlog = (data) => {\n    return { type: 'ADD_BLOG', payload: data }\n}\n\nexport const likeBlog = (data) => {\n    return { type: 'ADD_BLOG', payload: data }\n}\n\nconst blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_BLOGS':\n            return action.payload\n        case 'ADD_BLOG':\n            return state.concat(action.payload)\n        case 'ADD_LIKE': {\n            const toLikeBlog = action.payload\n            return state.map((n) => (n.id !== toLikeBlog.id ? n : toLikeBlog))\n        }\n        default:\n            return state\n    }\n}\nexport default blogReducer\n\n// ////\n// import { createSlice } from '@reduxjs/toolkit'\n\n// const initialState = []\n\n// const blogSlice = createSlice({\n//     name: 'blogReducer',\n//     initialState,\n//     reducers: {\n//         setBlogs(state, action) {\n//             return action.payload\n//         },\n//         appendBlog(state, action) {\n//             state.push(action.payload)\n//         },\n//     },\n// })\n\n// export const { setBlogs, appendBlog } = blogSlice.actions\n// export default blogSlice.reducer\n\n// import blogService from '../services/blogs'\n// export const initializeBlogs = () => {\n//     return async (dispatch) => {\n//         const blogs = await blogService.getAll()\n//         dispatch(setBlogs(blogs))\n//     }\n// }\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,IAAI,IAAK;EAC9B,OAAO;IAAEC,IAAI,EAAE,WAAW;IAAEC,OAAO,EAAEF;EAAK,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIH,IAAI,IAAK;EAChC,OAAO;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAEF;EAAK,CAAC;AAC9C,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAIJ,IAAI,IAAK;EAC9B,OAAO;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAEF;EAAK,CAAC;AAC9C,CAAC;AAED,MAAMK,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACnC,QAAQA,MAAM,CAACN,IAAI;IACf,KAAK,WAAW;MACZ,OAAOM,MAAM,CAACL,OAAO;IACzB,KAAK,UAAU;MACX,OAAOI,KAAK,CAACE,MAAM,CAACD,MAAM,CAACL,OAAO,CAAC;IACvC,KAAK,UAAU;MAAE;QACb,MAAMO,UAAU,GAAGF,MAAM,CAACL,OAAO;QACjC,OAAOI,KAAK,CAACI,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACC,EAAE,KAAKH,UAAU,CAACG,EAAE,GAAGD,CAAC,GAAGF,UAAW,CAAC;MACtE;IACA;MACI,OAAOH,KAAK;EAAA;AAExB,CAAC;AACD,eAAeD,WAAW;;AAE1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
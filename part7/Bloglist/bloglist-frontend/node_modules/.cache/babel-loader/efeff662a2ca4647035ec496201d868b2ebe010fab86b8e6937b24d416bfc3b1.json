{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport loginService from '../services/login';\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: {},\n  reducers: {\n    setUser(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  setUser\n} = userSlice.actions;\nexport const loginUser = credentials => {\n  return async dispatch => {\n    const loginUser = await loginService.login(credentials);\n    dispatch(setUser(credentials));\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","loginService","userSlice","name","initialState","reducers","setUser","state","action","payload","actions","loginUser","credentials","dispatch","login","reducer"],"sources":["/Users/kulta/Code/FullstackOpenExercise/part7/Bloglist/bloglist-frontend/src/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport loginService from '../services/login'\n\nconst userSlice = createSlice({\n    name: 'users',\n    initialState: {},\n    reducers: {\n        setUser(state, action) {\n            return action.payload\n        },\n    },\n})\nexport const { setUser } = userSlice.actions\n\nexport const loginUser = (credentials) => {\n    return async (dispatch) => {\n        const loginUser = await loginService.login(credentials)\n        dispatch(setUser(credentials))\n    }\n}\nexport default userSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,mBAAmB;AAE5C,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,CAAC,CAAC;EAChBC,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,OAAOA,MAAM,CAACC,OAAO;IACzB;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEH;AAAQ,CAAC,GAAGJ,SAAS,CAACQ,OAAO;AAE5C,OAAO,MAAMC,SAAS,GAAIC,WAAW,IAAK;EACtC,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMF,SAAS,GAAG,MAAMV,YAAY,CAACa,KAAK,CAACF,WAAW,CAAC;IACvDC,QAAQ,CAACP,OAAO,CAACM,WAAW,CAAC,CAAC;EAClC,CAAC;AACL,CAAC;AACD,eAAeV,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
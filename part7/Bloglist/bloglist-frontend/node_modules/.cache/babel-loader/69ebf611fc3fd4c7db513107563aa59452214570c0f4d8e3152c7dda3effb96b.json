{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport loginService from '../services/login';\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: null,\n  reducers: {\n    setUser(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  setUser\n} = userSlice.actions;\nexport const loginUser = credentials => {\n  return async dispatch => {\n    const user = await loginService.login(credentials);\n    console.log('login User:', user);\n    dispatch(setUser(user));\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","loginService","userSlice","name","initialState","reducers","setUser","state","action","payload","actions","loginUser","credentials","dispatch","user","login","console","log","reducer"],"sources":["/Users/kulta/Code/FullstackOpenExercise/part7/Bloglist/bloglist-frontend/src/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport loginService from '../services/login'\n\nconst userSlice = createSlice({\n    name: 'users',\n    initialState: null,\n    reducers: {\n        setUser(state, action) {\n            return action.payload\n        },\n    },\n})\nexport const { setUser } = userSlice.actions\n\nexport const loginUser = (credentials) => {\n    return async (dispatch) => {\n        const user = await loginService.login(credentials)\n        console.log('login User:', user)\n        dispatch(setUser(user))\n    }\n}\nexport default userSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,mBAAmB;AAE5C,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,OAAOA,MAAM,CAACC,OAAO;IACzB;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAAEH;AAAQ,CAAC,GAAGJ,SAAS,CAACQ,OAAO;AAE5C,OAAO,MAAMC,SAAS,GAAIC,WAAW,IAAK;EACtC,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,IAAI,GAAG,MAAMb,YAAY,CAACc,KAAK,CAACH,WAAW,CAAC;IAClDI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,IAAI,CAAC;IAChCD,QAAQ,CAACP,OAAO,CAACQ,IAAI,CAAC,CAAC;EAC3B,CAAC;AACL,CAAC;AACD,eAAeZ,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
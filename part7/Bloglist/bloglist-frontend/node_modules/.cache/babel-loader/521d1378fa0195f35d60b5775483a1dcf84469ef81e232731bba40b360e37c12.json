{"ast":null,"code":"// const [blogs, setBlogs] = useState([])\n\nimport blogService from '../services/blogs';\nimport { addLike, setBlogs } from '../actions';\nexport const blogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'BLOGS':\n      return action.payload;\n    case 'NEW_BLOG':\n      return state.concat(action.payload);\n    case 'ADD_LIKE':\n      {\n        // const id = action.payload.id\n        const blog = action.payload;\n        const toLikeBlog = state.find(blog => blog.id === id);\n        const updatedBlog = {\n          ...toLikeBlog,\n          likes: toLikeBlog.likes + 1\n        };\n        return state.map(blog => blog.id !== id ? blog : updatedBlog);\n      }\n    default:\n      return state;\n  }\n};\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch(setBlogs(blogs));\n  };\n};\nexport const updateLikes = id => {\n  return async dispatch => {\n    const toLikeBlog = dispatch(addLike(id));\n    await blogService.update(id, toLikeBlog);\n    dispatch(setBlogs());\n  };\n};\n// blogService.update(id, changedBlog).then((returnedBlog) => {\n//             setBlogs(\n//                 blogs.map((blog) => (blog.id !== id ? blog : returnedBlog))\n//             )\n//         })","map":{"version":3,"names":["blogService","addLike","setBlogs","blogReducer","state","action","type","payload","concat","blog","toLikeBlog","find","id","updatedBlog","likes","map","initializeBlogs","dispatch","blogs","getAll","updateLikes","update"],"sources":["/Users/kulta/Code/FullstackOpenExercise/part7/Bloglist/bloglist-frontend/src/reducers/blogReducer.js"],"sourcesContent":["// const [blogs, setBlogs] = useState([])\n\nimport blogService from '../services/blogs'\nimport { addLike, setBlogs } from '../actions'\nexport const blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'BLOGS':\n            return action.payload\n        case 'NEW_BLOG':\n            return state.concat(action.payload)\n        case 'ADD_LIKE': {\n            // const id = action.payload.id\n            const blog = action.payload\n            const toLikeBlog = state.find((blog) => blog.id === id)\n            const updatedBlog = { ...toLikeBlog, likes: toLikeBlog.likes + 1 }\n\n            return state.map((blog) => (blog.id !== id ? blog : updatedBlog))\n        }\n        default:\n            return state\n    }\n}\n\nexport const initializeBlogs = () => {\n    return async (dispatch) => {\n        const blogs = await blogService.getAll()\n        dispatch(setBlogs(blogs))\n    }\n}\n\nexport const updateLikes = (id) => {\n    return async (dispatch) => {\n        const toLikeBlog = dispatch(addLike(id))\n        await blogService.update(id, toLikeBlog)\n        dispatch(setBlogs())\n    }\n}\n// blogService.update(id, changedBlog).then((returnedBlog) => {\n//             setBlogs(\n//                 blogs.map((blog) => (blog.id !== id ? blog : returnedBlog))\n//             )\n//         })\n"],"mappings":"AAAA;;AAEA,OAAOA,WAAW,MAAM,mBAAmB;AAC3C,SAASC,OAAO,EAAEC,QAAQ,QAAQ,YAAY;AAC9C,OAAO,MAAMC,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,OAAO;MACR,OAAOD,MAAM,CAACE,OAAO;IACzB,KAAK,UAAU;MACX,OAAOH,KAAK,CAACI,MAAM,CAACH,MAAM,CAACE,OAAO,CAAC;IACvC,KAAK,UAAU;MAAE;QACb;QACA,MAAME,IAAI,GAAGJ,MAAM,CAACE,OAAO;QAC3B,MAAMG,UAAU,GAAGN,KAAK,CAACO,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAACG,EAAE,KAAKA,EAAE,CAAC;QACvD,MAAMC,WAAW,GAAG;UAAE,GAAGH,UAAU;UAAEI,KAAK,EAAEJ,UAAU,CAACI,KAAK,GAAG;QAAE,CAAC;QAElE,OAAOV,KAAK,CAACW,GAAG,CAAEN,IAAI,IAAMA,IAAI,CAACG,EAAE,KAAKA,EAAE,GAAGH,IAAI,GAAGI,WAAY,CAAC;MACrE;IACA;MACI,OAAOT,KAAK;EAAA;AAExB,CAAC;AAED,OAAO,MAAMY,eAAe,GAAG,MAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,KAAK,GAAG,MAAMlB,WAAW,CAACmB,MAAM,EAAE;IACxCF,QAAQ,CAACf,QAAQ,CAACgB,KAAK,CAAC,CAAC;EAC7B,CAAC;AACL,CAAC;AAED,OAAO,MAAME,WAAW,GAAIR,EAAE,IAAK;EAC/B,OAAO,MAAOK,QAAQ,IAAK;IACvB,MAAMP,UAAU,GAAGO,QAAQ,CAAChB,OAAO,CAACW,EAAE,CAAC,CAAC;IACxC,MAAMZ,WAAW,CAACqB,MAAM,CAACT,EAAE,EAAEF,UAAU,CAAC;IACxCO,QAAQ,CAACf,QAAQ,EAAE,CAAC;EACxB,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
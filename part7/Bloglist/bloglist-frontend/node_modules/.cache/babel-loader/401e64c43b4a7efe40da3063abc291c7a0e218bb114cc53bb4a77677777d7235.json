{"ast":null,"code":"// export const setBlogs = (data) => {\n//     return { type: 'SET_BLOGS', payload: data }\n// }\n\n// export const appendBlog = (data) => {\n//     return { type: 'ADD_BLOG', payload: data }\n// }\n\n// export const updateLikeBlogs = (data) => {\n//     return { type: 'ADD_BLOG', payload: data }\n// }\n\n// const blogReducer = (state = [], action) => {\n//     switch (action.type) {\n//         case 'SET_BLOGS':\n//             return action.payload\n//         case 'ADD_BLOG':\n//             return state.concat(action.payload)\n//         case 'ADD_LIKE': {\n//             const id = action.payload\n//             const toLikeBlog = state.find((n) => n.id === id)\n//             const changedBlog = { ...toLikeBlog, likes: toLikeBlog.likes + 1 }\n//             return state.map((n) => (n.id !== changedBlog.id ? n : changedBlog))\n//         }\n//         default:\n//             return state\n//     }\n// }\n// export default blogReducer\n\n////\nimport { createSlice } from '@reduxjs/toolkit';\nconst blogSlice = createSlice({\n  name: 'blogReducer',\n  initialState,\n  reducers: {\n    setBlogs(state, action) {\n      return action.payload;\n    },\n    appendBlog(state, action) {\n      state.push(action.payload);\n    }\n  }\n});\nexport const {\n  setBlogs,\n  appendBlog\n} = blogSlice.actions;\nexport default blogSlice.reducer;\nimport blogService from '../services/blogs';\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch(setBlogs(blogs));\n  };\n};","map":{"version":3,"names":["createSlice","blogSlice","name","initialState","reducers","setBlogs","state","action","payload","appendBlog","push","actions","reducer","blogService","initializeBlogs","dispatch","blogs","getAll"],"sources":["/Users/kulta/Code/FullstackOpenExercise/part7/Bloglist/bloglist-frontend/src/reducers/blogReducer.js"],"sourcesContent":["// export const setBlogs = (data) => {\n//     return { type: 'SET_BLOGS', payload: data }\n// }\n\n// export const appendBlog = (data) => {\n//     return { type: 'ADD_BLOG', payload: data }\n// }\n\n// export const updateLikeBlogs = (data) => {\n//     return { type: 'ADD_BLOG', payload: data }\n// }\n\n// const blogReducer = (state = [], action) => {\n//     switch (action.type) {\n//         case 'SET_BLOGS':\n//             return action.payload\n//         case 'ADD_BLOG':\n//             return state.concat(action.payload)\n//         case 'ADD_LIKE': {\n//             const id = action.payload\n//             const toLikeBlog = state.find((n) => n.id === id)\n//             const changedBlog = { ...toLikeBlog, likes: toLikeBlog.likes + 1 }\n//             return state.map((n) => (n.id !== changedBlog.id ? n : changedBlog))\n//         }\n//         default:\n//             return state\n//     }\n// }\n// export default blogReducer\n\n////\nimport { createSlice } from '@reduxjs/toolkit'\n\nconst blogSlice = createSlice({\n    name: 'blogReducer',\n    initialState,\n    reducers: {\n        setBlogs(state, action) {\n            return action.payload\n        },\n        appendBlog(state, action) {\n            state.push(action.payload)\n        },\n    },\n})\n\nexport const { setBlogs, appendBlog } = blogSlice.actions\nexport default blogSlice.reducer\n\nimport blogService from '../services/blogs'\nexport const initializeBlogs = () => {\n    return async (dispatch) => {\n        const blogs = await blogService.getAll()\n        dispatch(setBlogs(blogs))\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,aAAa;EACnBC,YAAY;EACZC,QAAQ,EAAE;IACNC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACpB,OAAOA,MAAM,CAACC,OAAO;IACzB,CAAC;IACDC,UAAU,CAACH,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACI,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC9B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,QAAQ;EAAEI;AAAW,CAAC,GAAGR,SAAS,CAACU,OAAO;AACzD,eAAeV,SAAS,CAACW,OAAO;AAEhC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAO,MAAMC,eAAe,GAAG,MAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,KAAK,GAAG,MAAMH,WAAW,CAACI,MAAM,EAAE;IACxCF,QAAQ,CAACV,QAAQ,CAACW,KAAK,CAAC,CAAC;EAC7B,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
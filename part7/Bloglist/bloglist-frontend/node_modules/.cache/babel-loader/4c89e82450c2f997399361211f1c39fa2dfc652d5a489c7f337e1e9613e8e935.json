{"ast":null,"code":"var _jsxFileName = \"/Users/kulta/Code/FullstackOpenExercise/part7/Bloglist/bloglist-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport BlogForm from './components/BlogForm';\nimport { setMessage, initializeBlogs, setBlogs, appendBlog } from './actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [loginVisible, setLoginVisible] = useState(false);\n  const [blogVisible, setBlogVisible] = useState(false);\n\n  // const [blogs, setBlogs] = useState([])\n  // const [message, setMessage] = useState(null)\n  // useEffect(() => {\n  //     blogService.getAll().then((blogs) => setBlogs(blogs))\n  // }, [])\n\n  //state announcement:\n  const blogs = useSelector(state => state.blogs);\n  const message = useSelector(state => state.notification);\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //     blogService.getAll().then((blogs) => dispatch(setBlogs(blogs)))\n  // }, [dispatch])\n  useEffect(() => {\n    dispatch(initializeBlogs());\n  }, [dispatch]);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      setUser(user);\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setUsername('');\n      setPassword('');\n      dispatch(setMessage(`${user.username} is logged in`));\n      setTimeout(() => {\n        dispatch(setMessage(null));\n      }, 5000);\n    } catch (exception) {\n      // setMessage('Wrong username or password')\n      dispatch(setMessage('Wrong username or password'));\n      setTimeout(() => {\n        dispatch(setMessage(null));\n      }, 5000);\n    }\n  };\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.removeItem('loggedBlogappUser');\n  };\n  const loginForm = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"log in to application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: loginVisible ? 'none' : ''\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"click-to-login\",\n        onClick: () => setLoginVisible(true),\n        children: \"Click to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message,\n      style: {\n        color: 'red',\n        borderStyle: 'solid',\n        borderColor: 'red',\n        background: 'lightgray',\n        fontSize: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: loginVisible ? '' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n        onSubmit: handleLogin,\n        username: username,\n        password: password,\n        handleUsernameChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUsername(target.value);\n        },\n        handlePasswordChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setPassword(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setLoginVisible(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  // const addBlog = (blogObject) => {\n  //     blogService.createNew(blogObject).then((returnedBlog) => {\n  //         setBlogs(blogs.concat(returnedBlog))\n  //     })\n  // }\n\n  const addBlog = blogObject => {\n    blogService.createNew(blogObject).then(returnedBlog => {\n      dispatch(appendBlog(returnedBlog));\n    });\n  };\n  const addBlogNotification = blogObject => {\n    dispatch(setMessage(`a new blog ${blogObject.title} by ${blogObject.author}`));\n    setTimeout(() => {\n      dispatch(setMessage(null));\n    }, 10000);\n  };\n  const addLikesFunc = id => {\n    const blog = blogs.find(blog => blog.id === id);\n    const changedBlog = {\n      ...blog,\n      likes: blog.likes + 1\n    };\n    blogService.update(changedBlog).then(returnedBlog => {\n      setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog));\n    });\n  };\n  // const addLikesFunc = (id) => {\n  //     const updatedBlog = blogs.find((blog) => blog.id === id)\n  //     const changedBlog = {\n  //         ...updatedBlog,\n  //         likes: updatedBlog.likes + 1,\n  //     }\n\n  //     blogService.update(changedBlog).then((returnedBlog) => {\n  //         dispatch(updateBlog(returnedBlog))\n  //     })\n  // }\n\n  const removeBlogof = id => {\n    const blog = blogs.find(blog => blog.id === id);\n    if (window.confirm(`Delete ${blog.title} ?`)) {\n      blogService.remove(id).then(dispatch(setBlogs(blogs.filter(blog => blog.id !== id)))).then(dispatch(setMessage(`Remove blog ${blog.title} by ${blog.author}`)));\n      setTimeout(() => {\n        dispatch(setMessage(null));\n      }, 10000);\n    }\n  };\n  const SortBlogbyLikes = (a, b) => {\n    return b.likes - a.likes;\n  };\n  const BlogsList = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message,\n      style: {\n        color: 'green',\n        borderStyle: 'solid',\n        borderColor: 'green',\n        background: 'lightgray',\n        fontSize: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", user.name, \" logged in\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"log out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: blogVisible ? 'none' : ''\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setBlogVisible(true),\n        children: \"new blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: blogVisible ? '' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"create new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BlogForm, {\n        handleSubmit: addBlog,\n        handleNotification: addBlogNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setBlogVisible(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), blogs.sort(SortBlogbyLikes).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog,\n      addLikes: () => addLikesFunc(blog.id),\n      removeBlog: () => removeBlogof(blog.id)\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user === null && loginForm(), user !== null && BlogsList(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"dYxAcy9KsOIOl75vehTVP9E83dM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Blog","blogService","loginService","Notification","LoginForm","BlogForm","setMessage","initializeBlogs","setBlogs","appendBlog","useDispatch","useSelector","App","username","setUsername","password","setPassword","user","setUser","loginVisible","setLoginVisible","blogVisible","setBlogVisible","blogs","state","message","notification","dispatch","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","setTimeout","exception","handleLogout","removeItem","loginForm","display","color","borderStyle","borderColor","background","fontSize","target","value","addBlog","blogObject","createNew","then","returnedBlog","addBlogNotification","title","author","addLikesFunc","id","blog","find","changedBlog","likes","update","map","removeBlogof","confirm","remove","filter","SortBlogbyLikes","a","b","BlogsList","name","sort"],"sources":["/Users/kulta/Code/FullstackOpenExercise/part7/Bloglist/bloglist-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport { setMessage, initializeBlogs, setBlogs, appendBlog } from './actions'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst App = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n    const [loginVisible, setLoginVisible] = useState(false)\n    const [blogVisible, setBlogVisible] = useState(false)\n\n    // const [blogs, setBlogs] = useState([])\n    // const [message, setMessage] = useState(null)\n    // useEffect(() => {\n    //     blogService.getAll().then((blogs) => setBlogs(blogs))\n    // }, [])\n\n    //state announcement:\n    const blogs = useSelector((state) => state.blogs)\n    const message = useSelector((state) => state.notification)\n\n    const dispatch = useDispatch()\n\n    // useEffect(() => {\n    //     blogService.getAll().then((blogs) => dispatch(setBlogs(blogs)))\n    // }, [dispatch])\n    useEffect(() => {\n        dispatch(initializeBlogs())\n    }, [dispatch])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n    }, [])\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const user = await loginService.login({\n                username,\n                password,\n            })\n\n            setUser(user)\n            blogService.setToken(user.token)\n            window.localStorage.setItem(\n                'loggedBlogappUser',\n                JSON.stringify(user)\n            )\n            setUsername('')\n            setPassword('')\n            dispatch(setMessage(`${user.username} is logged in`))\n            setTimeout(() => {\n                dispatch(setMessage(null))\n            }, 5000)\n        } catch (exception) {\n            // setMessage('Wrong username or password')\n            dispatch(setMessage('Wrong username or password'))\n            setTimeout(() => {\n                dispatch(setMessage(null))\n            }, 5000)\n        }\n    }\n\n    const handleLogout = () => {\n        setUser(null)\n        window.localStorage.removeItem('loggedBlogappUser')\n    }\n\n    const loginForm = () => (\n        <>\n            <h2>log in to application</h2>\n            <div style={{ display: loginVisible ? 'none' : '' }}>\n                <button\n                    id=\"click-to-login\"\n                    onClick={() => setLoginVisible(true)}\n                >\n                    Click to login\n                </button>\n            </div>\n            <Notification\n                message={message}\n                style={{\n                    color: 'red',\n                    borderStyle: 'solid',\n                    borderColor: 'red',\n                    background: 'lightgray',\n                    fontSize: 20,\n                }}\n            />\n            <div style={{ display: loginVisible ? '' : 'none' }}>\n                <LoginForm\n                    onSubmit={handleLogin}\n                    username={username}\n                    password={password}\n                    handleUsernameChange={({ target }) =>\n                        setUsername(target.value)\n                    }\n                    handlePasswordChange={({ target }) =>\n                        setPassword(target.value)\n                    }\n                />\n                <button onClick={() => setLoginVisible(false)}>Cancel</button>\n            </div>\n        </>\n    )\n\n    // const addBlog = (blogObject) => {\n    //     blogService.createNew(blogObject).then((returnedBlog) => {\n    //         setBlogs(blogs.concat(returnedBlog))\n    //     })\n    // }\n\n    const addBlog = (blogObject) => {\n        blogService.createNew(blogObject).then((returnedBlog) => {\n            dispatch(appendBlog(returnedBlog))\n        })\n    }\n\n    const addBlogNotification = (blogObject) => {\n        dispatch(\n            setMessage(`a new blog ${blogObject.title} by ${blogObject.author}`)\n        )\n        setTimeout(() => {\n            dispatch(setMessage(null))\n        }, 10000)\n    }\n\n    const addLikesFunc = (id) => {\n        const blog = blogs.find((blog) => blog.id === id)\n        const changedBlog = { ...blog, likes: blog.likes + 1 }\n        blogService.update(changedBlog).then((returnedBlog) => {\n            setBlogs(\n                blogs.map((blog) => (blog.id !== id ? blog : returnedBlog))\n            )\n        })\n    }\n    // const addLikesFunc = (id) => {\n    //     const updatedBlog = blogs.find((blog) => blog.id === id)\n    //     const changedBlog = {\n    //         ...updatedBlog,\n    //         likes: updatedBlog.likes + 1,\n    //     }\n\n    //     blogService.update(changedBlog).then((returnedBlog) => {\n    //         dispatch(updateBlog(returnedBlog))\n    //     })\n    // }\n\n    const removeBlogof = (id) => {\n        const blog = blogs.find((blog) => blog.id === id)\n        if (window.confirm(`Delete ${blog.title} ?`)) {\n            blogService\n                .remove(id)\n                .then(\n                    dispatch(setBlogs(blogs.filter((blog) => blog.id !== id)))\n                )\n                .then(\n                    dispatch(\n                        setMessage(\n                            `Remove blog ${blog.title} by ${blog.author}`\n                        )\n                    )\n                )\n            setTimeout(() => {\n                dispatch(setMessage(null))\n            }, 10000)\n        }\n    }\n\n    const SortBlogbyLikes = (a, b) => {\n        return b.likes - a.likes\n    }\n\n    const BlogsList = () => (\n        <>\n            <h2>blogs</h2>\n            <Notification\n                message={message}\n                style={{\n                    color: 'green',\n                    borderStyle: 'solid',\n                    borderColor: 'green',\n                    background: 'lightgray',\n                    fontSize: 20,\n                }}\n            />\n            <h3> {user.name} logged in</h3>\n            <button onClick={handleLogout}>log out</button>\n            <br />\n\n            <div style={{ display: blogVisible ? 'none' : '' }}>\n                <button onClick={() => setBlogVisible(true)}>new blog</button>\n            </div>\n\n            <div style={{ display: blogVisible ? '' : 'none' }}>\n                <h3>create new</h3>\n                <BlogForm\n                    handleSubmit={addBlog}\n                    handleNotification={addBlogNotification}\n                />\n                <button onClick={() => setBlogVisible(false)}>Cancel</button>\n            </div>\n\n            {blogs.sort(SortBlogbyLikes).map((blog) => (\n                <Blog\n                    key={blog.id}\n                    blog={blog}\n                    addLikes={() => addLikesFunc(blog.id)}\n                    removeBlog={() => removeBlogof(blog.id)}\n                />\n            ))}\n        </>\n    )\n\n    return (\n        <div>\n            {user === null && loginForm()}\n            {user !== null && BlogsList()}\n\n            <br />\n        </div>\n    )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}